rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && isValidUserData(request.resource.data);
    }
    
    // Helper function to validate user data
    function isValidUserData(data) {
      return data.keys().hasAll(['name', 'email', 'updatedAt'])
        && data.name is string
        && data.name.size() > 0
        && data.name.size() <= 100
        && data.email is string
        && data.email.matches('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')
        && data.updatedAt is timestamp;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Storage rules
service firebase.storage {
  match /b/{bucket}/o {
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && resource.size < 10 * 1024 * 1024; // 10MB limit
    }
  }
}